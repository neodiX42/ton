name: Windows Server 2019 x64 Compile

on: [push,workflow_dispatch,workflow_call]

defaults:
  run:
    shell: cmd

jobs:
  build:

    runs-on: windows-2019

    steps:
      - name: Get Current OS version
        run: |
          systeminfo | findstr /B /C:"OS Name" /C:"OS Version"  
          ls "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC"

      - name: Check out current repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: microsoft/setup-msbuild@v1.1

      - name: Install Pkg-config Lite
        run: choco install pkgconfiglite

      - name: Install pre-compiled zlib Win64
        run: |
          curl -Lo zlib.zip https://github.com/neodiX42/precompiled-openssl-win64/raw/main/zlib.zip
          jar xf zlib.zip

      - name: Install pre-compiled OpenSSL Win64
        run: |
          curl -Lo openssl-1.1.1j.zip https://github.com/neodiX42/precompiled-openssl-win64/raw/main/openssl-1.1.1j.zip
          jar xf openssl-1.1.1j.zip

      - name: Install pre-compiled libmicrohttpd Win64
        run: |
          curl -Lo libmicrohttpd-latest-w32-bin.zip https://ftpmirror.gnu.org/libmicrohttpd/libmicrohttpd-latest-w32-bin.zip
          unzip -qq libmicrohttpd-latest-w32-bin.zip

      - uses: seanmiddleditch/gha-setup-ninja@master
      - run: |
          set root=%cd%
          echo %root%
          mkdir build
          cd build
          cmake -GNinja -DSODIUM_USE_STATIC_LIBS=1 -DSECP256K1_INCLUDE_DIR=%root%\secp256k1\include -DSECP256K1_LIBRARY=%root%\secp256k1\bin\x64\Release\v142\static\secp256k1.lib -DREADLINE_INCLUDE_DIR=%root%\readline-5.0-1-lib\include\readline -DREADLINE_LIBRARY=%root%\readline-5.0-1-lib\lib\readline.lib -DPORTABLE=1 -DZLIB_FOUND=1 -DMHD_FOUND=1 -DMHD_LIBRARY=%root%\libmicrohttpd-0.9.75-w32-bin\x86_64\VS2019\Release-static\libmicrohttpd.lib -DMHD_INCLUDE_DIR=%root%\libmicrohttpd-0.9.75-w32-bin\x86_64\VS2019\Release-static -DZLIB_INCLUDE_DIR=%root%\zlib -DZLIB_LIBRARY=%root%\zlib\contrib\vstudio\vc14\x64\ZlibStatReleaseWithoutAsm\zlibstat.lib -DOPENSSL_FOUND=1 -DOPENSSL_INCLUDE_DIR=%root%/openssl-1.1.1j/include -DOPENSSL_CRYPTO_LIBRARY=%root%/openssl-1.1.1j/lib/libcrypto_static.lib -DCMAKE_CXX_FLAGS="/DTD_WINDOWS=1 /EHsc /bigobj" ..
          ninja storage-daemon storage-daemon-cli blockchain-explorer fift func tonlib tonlibjson tonlib-cli validator-engine lite-client pow-miner validator-engine-console generate-random-id json2tlo dht-server http-proxy rldp-http-proxy adnl-proxy create-state create-hardfork
        env:
          CC: cl
          CXX: cl

      - name: Check if validator-engine.exe exists
        run: |
          copy %cd%\build\validator-engine\validator-engine.exe test

      - name: Find & copy binaries
        run: |
          mkdir artifacts
          mkdir artifacts\smartcont
          mkdir artifacts\lib

          copy build\storage\storage-daemon\storage-daemon.exe artifacts\
          copy build\storage\storage-daemon\storage-daemon-cli.exe artifacts\
          copy build\blockchain-explorer\blockchain-explorer.exe artifacts\
          copy build\crypto\fift.exe artifacts\
          copy build\crypto\tlbc.exe artifacts\
          copy build\crypto\func.exe build\crypto\create-state.exe artifacts\
          copy build\validator-engine-console\validator-engine-console.exe artifacts\
          copy build\tonlib\tonlib-cli.exe artifacts\
          copy build\tonlib\tonlibjson.dll artifacts\
          copy build\http\http-proxy.exe artifacts\
          copy build\rldp-http-proxy\rldp-http-proxy.exe artifacts\
          copy build\dht-server\dht-server.exe artifacts\
          copy build\lite-client\lite-client.exe artifacts\
          copy build\validator-engine\validator-engine.exe  artifacts\
          copy build\utils\generate-random-id.exe  artifacts\
          copy build\utils\json2tlo.exe build\adnl\Release\adnl-proxy.exe artifacts\
          xcopy /e /k /h /i crypto\smartcont artifacts\smartcont
          xcopy /e /k /h /i crypto\fift\lib artifacts\lib

      - name: Upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: ton-win-binaries
          path: artifacts
